services:
  # FastAPI Application
  fastapi:
    build:
      context: ..
      dockerfile: docker/minirag/Dockerfile
    container_name: fastapi
    ports:
      - "8002:8000"
    volumes:
      - fastapi_data:/app/assets
    networks:
      - backend
    restart: always
    depends_on:
      pgvector:
        condition: service_healthy
    env_file:
      - ./env/.env.app

  # PostgreSQL (pgvector)
  pgvector:
    image: pgvector/pgvector:pg17
    container_name: pgvector
    ports:
      - "5445:5432"
    volumes:
      - 'pgvector:/var/lib/postgresql/data'
    env_file:
      - ./env/.env.postgres
    networks:
      - backend
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Qdrant (VectorDB)
  qdrant:
    image: qdrant/qdrant:v1.13.6
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - backend
    restart: always

networks:
  backend:
    driver: bridge

volumes:
  fastapi_data:
  pgvector:
  qdrant_data:
